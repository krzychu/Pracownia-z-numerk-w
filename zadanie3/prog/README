1. Kompilacja
  
  Potrzebne biblioteki i programy:
    
    - Boost : program korzysta z klasy shared_ptr, by w efektywny i przejrzysty 
      sposób zaimplementować kopiowanie i przypisywanie macierzy, których dane
      są zapisane w stercie. Jako że nasz program jest biblioteką dla pythona, 
      korzystamy również z biblioteki boost::python, która umożliwia łatwe 
      udostępnianie klas C++ temu językowi skryptowemu.

    - CMake : znacznie upraszcza proces kompilacji programu i automatycznie
      znajduje biblioteki.

  W debianowatych systemach np. Ubuntu, aby zainstalować wszystkie potrzebne 
  biblioteki należy wydać polecenie
    - sudo apt-get install libboost-python-dev python-numpy cmake

  Przebieg:

    Aby skompilować program, należy wydać następujące polecenia:
      - cd build
      - cmake ..
      - make

    Aby zweryfikować poprawność kompilacji, można wykonać kilka testów 
    poprawnościowych poleceniem:
      - make test

2. Testy
  
  Aby wygenerować dane trzeba w katalogu tests wydać polecenie 'make'
